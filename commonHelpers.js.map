{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst outputDays = document.querySelector('[data-days]');\nconst outputHours = document.querySelector('[data-hours]');\nconst outputMinutes = document.querySelector('[data-minutes]');\nconst outputSeconds = document.querySelector('[data-seconds]');\n\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nbtn.addEventListener(\"click\", startTimer)\n\nfunction startTimer () {\n    timerId = setInterval(updateTimer, 1000)\n    btn.disabled = true;\n    input.disabled = true;\n}\n\nfunction updateTimer () {\n    const timeDif = userSelectedDate - new Date(); \n    if (timeDif <= 0) {\n        clearInterval(timerId)\n        input.disabled = false;\n        return\n        \n    }\n    const { days, hours, minutes, seconds } = convertMs(timeDif);\n    outputDays.textContent = String(days).padStart(2, 0);\n    outputHours.textContent = String(hours).padStart(2, 0);\n    outputMinutes.textContent = String(minutes).padStart(2, 0);\n    outputSeconds.textContent = String(seconds).padStart(2, 0);\n\n\n}\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] <= new Date() ) {\n            btn.disabled = true;\n            return iziToast.error({position:\"topRight\", message:\"Please choose a date in the future\"})\n        }\n        btn.disabled = false;\n        userSelectedDate = selectedDates[0];\n      console.log(selectedDates[0]);\n    },\n  };\n\n    flatpickr(input, options)\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n  \n"],"names":["btn","input","outputDays","outputHours","outputMinutes","outputSeconds","userSelectedDate","timerId","startTimer","updateTimer","timeDif","days","hours","minutes","seconds","convertMs","options","selectedDates","iziToast","flatpickr","ms"],"mappings":"+IAQA,MAAMA,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,gBAAgB,EACvDC,EAAgB,SAAS,cAAc,gBAAgB,EAG7D,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAI,iBAAiB,QAASQ,CAAU,EAExC,SAASA,GAAc,CACnBD,EAAU,YAAYE,EAAa,GAAI,EACvCT,EAAI,SAAW,GACfC,EAAM,SAAW,EACrB,CAEA,SAASQ,GAAe,CACpB,MAAMC,EAAUJ,EAAmB,IAAI,KACvC,GAAII,GAAW,EAAG,CACd,cAAcH,CAAO,EACrBN,EAAM,SAAW,GACjB,MAEH,CACD,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAO,EAC3DR,EAAW,YAAc,OAAOS,CAAI,EAAE,SAAS,EAAG,CAAC,EACnDR,EAAY,YAAc,OAAOS,CAAK,EAAE,SAAS,EAAG,CAAC,EACrDR,EAAc,YAAc,OAAOS,CAAO,EAAE,SAAS,EAAG,CAAC,EACzDR,EAAc,YAAc,OAAOS,CAAO,EAAE,SAAS,EAAG,CAAC,CAG7D,CAEA,MAAME,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,GAAIA,EAAc,CAAC,GAAK,IAAI,KACxB,OAAAjB,EAAI,SAAW,GACRkB,EAAS,MAAM,CAAC,SAAS,WAAY,QAAQ,oCAAoC,CAAC,EAE7FlB,EAAI,SAAW,GACfM,EAAmBW,EAAc,CAAC,EACpC,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACL,EAEIE,EAAUlB,EAAOe,CAAO,EAE1B,SAASD,EAAUK,EAAI,CAQrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAE1BR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EAEpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EAEjDN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}